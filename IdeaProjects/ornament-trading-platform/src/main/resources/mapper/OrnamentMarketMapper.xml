<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.electronic.boot.mapper.OrnamentMarketMapper">
  <resultMap id="BaseResultMap" type="com.electronic.boot.bean.OrnamentMarket">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sell_min_price" jdbcType="DECIMAL" property="sellMinPrice" />
    <result column="sell_num" jdbcType="INTEGER" property="sellNum" />
    <result column="icon_url" jdbcType="VARCHAR" property="iconUrl" />
    <result column="exterior_id" jdbcType="INTEGER" property="exteriorId" />
    <result column="exterior_internal_name" jdbcType="VARCHAR" property="exteriorInternalName" />
    <result column="exterior_localized_name" jdbcType="VARCHAR" property="exteriorLocalizedName" />
    <result column="quality_id" jdbcType="INTEGER" property="qualityId" />
    <result column="quality_internal_name" jdbcType="VARCHAR" property="qualityInternalName" />
    <result column="quality_localized_name" jdbcType="VARCHAR" property="qualityLocalizedName" />
    <result column="rarity_id" jdbcType="INTEGER" property="rarityId" />
    <result column="rarity_internal_name" jdbcType="VARCHAR" property="rarityInternalName" />
    <result column="rarity_localized_name" jdbcType="VARCHAR" property="rarityLocalizedName" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="type_internal_name" jdbcType="VARCHAR" property="typeInternalName" />
    <result column="type_localized_name" jdbcType="VARCHAR" property="typeLocalizedName" />
    <result column="weapon_id" jdbcType="INTEGER" property="weaponId" />
    <result column="weapon_internal_name" jdbcType="VARCHAR" property="weaponInternalName" />
    <result column="weapon_localized_name" jdbcType="VARCHAR" property="weaponLocalizedName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, sell_min_price, sell_num, icon_url, exterior_id, exterior_internal_name, 
    exterior_localized_name, quality_id, quality_internal_name, quality_localized_name, 
    rarity_id, rarity_internal_name, rarity_localized_name, type_id, type_internal_name, 
    type_localized_name, weapon_id, weapon_internal_name, weapon_localized_name
  </sql>
  <select id="selectByExample" parameterType="com.electronic.boot.bean.OrnamentMarketExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ornament_market
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ornament_market
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ornament_market
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.electronic.boot.bean.OrnamentMarketExample">
    delete from ornament_market
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.electronic.boot.bean.OrnamentMarket">
    insert into ornament_market (id, name, sell_min_price, 
      sell_num, icon_url, exterior_id, 
      exterior_internal_name, exterior_localized_name, 
      quality_id, quality_internal_name, quality_localized_name, 
      rarity_id, rarity_internal_name, rarity_localized_name, 
      type_id, type_internal_name, type_localized_name, 
      weapon_id, weapon_internal_name, weapon_localized_name
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sellMinPrice,jdbcType=DECIMAL}, 
      #{sellNum,jdbcType=INTEGER}, #{iconUrl,jdbcType=VARCHAR}, #{exteriorId,jdbcType=INTEGER}, 
      #{exteriorInternalName,jdbcType=VARCHAR}, #{exteriorLocalizedName,jdbcType=VARCHAR}, 
      #{qualityId,jdbcType=INTEGER}, #{qualityInternalName,jdbcType=VARCHAR}, #{qualityLocalizedName,jdbcType=VARCHAR}, 
      #{rarityId,jdbcType=INTEGER}, #{rarityInternalName,jdbcType=VARCHAR}, #{rarityLocalizedName,jdbcType=VARCHAR}, 
      #{typeId,jdbcType=INTEGER}, #{typeInternalName,jdbcType=VARCHAR}, #{typeLocalizedName,jdbcType=VARCHAR}, 
      #{weaponId,jdbcType=INTEGER}, #{weaponInternalName,jdbcType=VARCHAR}, #{weaponLocalizedName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.electronic.boot.bean.OrnamentMarket">
    insert into ornament_market
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sellMinPrice != null">
        sell_min_price,
      </if>
      <if test="sellNum != null">
        sell_num,
      </if>
      <if test="iconUrl != null">
        icon_url,
      </if>
      <if test="exteriorId != null">
        exterior_id,
      </if>
      <if test="exteriorInternalName != null">
        exterior_internal_name,
      </if>
      <if test="exteriorLocalizedName != null">
        exterior_localized_name,
      </if>
      <if test="qualityId != null">
        quality_id,
      </if>
      <if test="qualityInternalName != null">
        quality_internal_name,
      </if>
      <if test="qualityLocalizedName != null">
        quality_localized_name,
      </if>
      <if test="rarityId != null">
        rarity_id,
      </if>
      <if test="rarityInternalName != null">
        rarity_internal_name,
      </if>
      <if test="rarityLocalizedName != null">
        rarity_localized_name,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="typeInternalName != null">
        type_internal_name,
      </if>
      <if test="typeLocalizedName != null">
        type_localized_name,
      </if>
      <if test="weaponId != null">
        weapon_id,
      </if>
      <if test="weaponInternalName != null">
        weapon_internal_name,
      </if>
      <if test="weaponLocalizedName != null">
        weapon_localized_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sellMinPrice != null">
        #{sellMinPrice,jdbcType=DECIMAL},
      </if>
      <if test="sellNum != null">
        #{sellNum,jdbcType=INTEGER},
      </if>
      <if test="iconUrl != null">
        #{iconUrl,jdbcType=VARCHAR},
      </if>
      <if test="exteriorId != null">
        #{exteriorId,jdbcType=INTEGER},
      </if>
      <if test="exteriorInternalName != null">
        #{exteriorInternalName,jdbcType=VARCHAR},
      </if>
      <if test="exteriorLocalizedName != null">
        #{exteriorLocalizedName,jdbcType=VARCHAR},
      </if>
      <if test="qualityId != null">
        #{qualityId,jdbcType=INTEGER},
      </if>
      <if test="qualityInternalName != null">
        #{qualityInternalName,jdbcType=VARCHAR},
      </if>
      <if test="qualityLocalizedName != null">
        #{qualityLocalizedName,jdbcType=VARCHAR},
      </if>
      <if test="rarityId != null">
        #{rarityId,jdbcType=INTEGER},
      </if>
      <if test="rarityInternalName != null">
        #{rarityInternalName,jdbcType=VARCHAR},
      </if>
      <if test="rarityLocalizedName != null">
        #{rarityLocalizedName,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="typeInternalName != null">
        #{typeInternalName,jdbcType=VARCHAR},
      </if>
      <if test="typeLocalizedName != null">
        #{typeLocalizedName,jdbcType=VARCHAR},
      </if>
      <if test="weaponId != null">
        #{weaponId,jdbcType=INTEGER},
      </if>
      <if test="weaponInternalName != null">
        #{weaponInternalName,jdbcType=VARCHAR},
      </if>
      <if test="weaponLocalizedName != null">
        #{weaponLocalizedName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.electronic.boot.bean.OrnamentMarketExample" resultType="java.lang.Long">
    select count(*) from ornament_market
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ornament_market
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sellMinPrice != null">
        sell_min_price = #{record.sellMinPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.sellNum != null">
        sell_num = #{record.sellNum,jdbcType=INTEGER},
      </if>
      <if test="record.iconUrl != null">
        icon_url = #{record.iconUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.exteriorId != null">
        exterior_id = #{record.exteriorId,jdbcType=INTEGER},
      </if>
      <if test="record.exteriorInternalName != null">
        exterior_internal_name = #{record.exteriorInternalName,jdbcType=VARCHAR},
      </if>
      <if test="record.exteriorLocalizedName != null">
        exterior_localized_name = #{record.exteriorLocalizedName,jdbcType=VARCHAR},
      </if>
      <if test="record.qualityId != null">
        quality_id = #{record.qualityId,jdbcType=INTEGER},
      </if>
      <if test="record.qualityInternalName != null">
        quality_internal_name = #{record.qualityInternalName,jdbcType=VARCHAR},
      </if>
      <if test="record.qualityLocalizedName != null">
        quality_localized_name = #{record.qualityLocalizedName,jdbcType=VARCHAR},
      </if>
      <if test="record.rarityId != null">
        rarity_id = #{record.rarityId,jdbcType=INTEGER},
      </if>
      <if test="record.rarityInternalName != null">
        rarity_internal_name = #{record.rarityInternalName,jdbcType=VARCHAR},
      </if>
      <if test="record.rarityLocalizedName != null">
        rarity_localized_name = #{record.rarityLocalizedName,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.typeInternalName != null">
        type_internal_name = #{record.typeInternalName,jdbcType=VARCHAR},
      </if>
      <if test="record.typeLocalizedName != null">
        type_localized_name = #{record.typeLocalizedName,jdbcType=VARCHAR},
      </if>
      <if test="record.weaponId != null">
        weapon_id = #{record.weaponId,jdbcType=INTEGER},
      </if>
      <if test="record.weaponInternalName != null">
        weapon_internal_name = #{record.weaponInternalName,jdbcType=VARCHAR},
      </if>
      <if test="record.weaponLocalizedName != null">
        weapon_localized_name = #{record.weaponLocalizedName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ornament_market
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      sell_min_price = #{record.sellMinPrice,jdbcType=DECIMAL},
      sell_num = #{record.sellNum,jdbcType=INTEGER},
      icon_url = #{record.iconUrl,jdbcType=VARCHAR},
      exterior_id = #{record.exteriorId,jdbcType=INTEGER},
      exterior_internal_name = #{record.exteriorInternalName,jdbcType=VARCHAR},
      exterior_localized_name = #{record.exteriorLocalizedName,jdbcType=VARCHAR},
      quality_id = #{record.qualityId,jdbcType=INTEGER},
      quality_internal_name = #{record.qualityInternalName,jdbcType=VARCHAR},
      quality_localized_name = #{record.qualityLocalizedName,jdbcType=VARCHAR},
      rarity_id = #{record.rarityId,jdbcType=INTEGER},
      rarity_internal_name = #{record.rarityInternalName,jdbcType=VARCHAR},
      rarity_localized_name = #{record.rarityLocalizedName,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=INTEGER},
      type_internal_name = #{record.typeInternalName,jdbcType=VARCHAR},
      type_localized_name = #{record.typeLocalizedName,jdbcType=VARCHAR},
      weapon_id = #{record.weaponId,jdbcType=INTEGER},
      weapon_internal_name = #{record.weaponInternalName,jdbcType=VARCHAR},
      weapon_localized_name = #{record.weaponLocalizedName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.electronic.boot.bean.OrnamentMarket">
    update ornament_market
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sellMinPrice != null">
        sell_min_price = #{sellMinPrice,jdbcType=DECIMAL},
      </if>
      <if test="sellNum != null">
        sell_num = #{sellNum,jdbcType=INTEGER},
      </if>
      <if test="iconUrl != null">
        icon_url = #{iconUrl,jdbcType=VARCHAR},
      </if>
      <if test="exteriorId != null">
        exterior_id = #{exteriorId,jdbcType=INTEGER},
      </if>
      <if test="exteriorInternalName != null">
        exterior_internal_name = #{exteriorInternalName,jdbcType=VARCHAR},
      </if>
      <if test="exteriorLocalizedName != null">
        exterior_localized_name = #{exteriorLocalizedName,jdbcType=VARCHAR},
      </if>
      <if test="qualityId != null">
        quality_id = #{qualityId,jdbcType=INTEGER},
      </if>
      <if test="qualityInternalName != null">
        quality_internal_name = #{qualityInternalName,jdbcType=VARCHAR},
      </if>
      <if test="qualityLocalizedName != null">
        quality_localized_name = #{qualityLocalizedName,jdbcType=VARCHAR},
      </if>
      <if test="rarityId != null">
        rarity_id = #{rarityId,jdbcType=INTEGER},
      </if>
      <if test="rarityInternalName != null">
        rarity_internal_name = #{rarityInternalName,jdbcType=VARCHAR},
      </if>
      <if test="rarityLocalizedName != null">
        rarity_localized_name = #{rarityLocalizedName,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="typeInternalName != null">
        type_internal_name = #{typeInternalName,jdbcType=VARCHAR},
      </if>
      <if test="typeLocalizedName != null">
        type_localized_name = #{typeLocalizedName,jdbcType=VARCHAR},
      </if>
      <if test="weaponId != null">
        weapon_id = #{weaponId,jdbcType=INTEGER},
      </if>
      <if test="weaponInternalName != null">
        weapon_internal_name = #{weaponInternalName,jdbcType=VARCHAR},
      </if>
      <if test="weaponLocalizedName != null">
        weapon_localized_name = #{weaponLocalizedName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.electronic.boot.bean.OrnamentMarket">
    update ornament_market
    set name = #{name,jdbcType=VARCHAR},
      sell_min_price = #{sellMinPrice,jdbcType=DECIMAL},
      sell_num = #{sellNum,jdbcType=INTEGER},
      icon_url = #{iconUrl,jdbcType=VARCHAR},
      exterior_id = #{exteriorId,jdbcType=INTEGER},
      exterior_internal_name = #{exteriorInternalName,jdbcType=VARCHAR},
      exterior_localized_name = #{exteriorLocalizedName,jdbcType=VARCHAR},
      quality_id = #{qualityId,jdbcType=INTEGER},
      quality_internal_name = #{qualityInternalName,jdbcType=VARCHAR},
      quality_localized_name = #{qualityLocalizedName,jdbcType=VARCHAR},
      rarity_id = #{rarityId,jdbcType=INTEGER},
      rarity_internal_name = #{rarityInternalName,jdbcType=VARCHAR},
      rarity_localized_name = #{rarityLocalizedName,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      type_internal_name = #{typeInternalName,jdbcType=VARCHAR},
      type_localized_name = #{typeLocalizedName,jdbcType=VARCHAR},
      weapon_id = #{weaponId,jdbcType=INTEGER},
      weapon_internal_name = #{weaponInternalName,jdbcType=VARCHAR},
      weapon_localized_name = #{weaponLocalizedName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>